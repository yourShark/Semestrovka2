import java.util.*;



class Point {
    int x, y;
    Point(int x, int y){
        this.x=x;
        this.y=y;
    }
}

class Jarvis { /* IronMam üòé */
    // –ù–∞–π—Ç–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∏–ø–ª–µ—Ç–∞ (p, q, r).
    // –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
    // 0 -> p, q –∏ r —è–≤–ª—è—é—Ç—Å—è –∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω—ã–º–∏
    // 1 -> –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ
    // 2 -> –ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏
    public static int orientation(Point p, Point q, Point r)
    {
        int val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);

        if (val == 0)
            return 0;  // –∫–æ–ª–ª–∏–Ω–µ–∞—Ä–µ–Ω
        return (val > 0)? 1: 2; // —á–∞—Å—ã –∏–ª–∏ –ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏
    }

    // –ü–µ—á–∞—Ç–∞–µ—Ç –≤—ã–ø—É–∫–ª—É—é –æ–±–æ–ª–æ—á–∫—É –∏–∑ –Ω–∞–±–æ—Ä–∞ –∏–∑ n —Ç–æ—á–µ–∫.
    public static void convexHull(Point points[], int n)
    {
        // –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 3 –±–∞–ª–ª–æ–≤

        if (n < 3) return;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç

        Vector<Point> hull = new Vector<Point>();

        // –ù–∞–π—Ç–∏ –∫—Ä–∞–π–Ω—é—é –ª–µ–≤—É—é —Ç–æ—á–∫—É
        int l = 0;
        for (int i = 1; i < n; i++)
            if (points[i].x < points[l].x)
                l = i;

        // –ù–∞—á–∏–Ω–∞–µ–º —Å –∫—Ä–∞–π–Ω–µ–π –ª–µ–≤–æ–π —Ç–æ—á–∫–∏, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–≤–∏–≥–∞—Ç—å—Å—è

        // –ø—Ä–æ—Ç–∏–≤ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–∏ –¥–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏

        // –æ–ø—è—Ç—å —Ç–∞–∫–∏. –≠—Ç–æ—Ç —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è O (h) —Ä–∞–∑, –≥–¥–µ h

        // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∏–ª–∏ –≤—ã—Ö–æ–¥–µ.

        int p = l, q;

        do

        {
            hull.add(points[p]);

            q = (p + 1) % n;

            for (int i = 0; i < n; i++)

            {

                if (orientation(points[p], points[i], points[q]) == 2)
                    q = i;
            }

            p = q;
        } while (p != l);  // –ü–æ–∫–∞ –º—ã –Ω–µ –ø—Ä–∏—Ö–æ–¥–∏–º –∫ –ø–µ—Ä–≤–æ–º—É

        for (Point temp : hull)
            System.out.println("(" + temp.x + ", " + temp.y + ")");
    }

}